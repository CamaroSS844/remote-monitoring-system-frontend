"use client";

import localFont from "next/font/local";
import "./globals.css";
import StoreProvider from "./StoreProvider";
import Image from "next/image";
import { useState, useEffect } from "react";
import styles from "./page.module.css";

import TopNav from "./OverviewComponents/topNav";
import SideNav from "./OverviewComponents/sideNav";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const ShiftDuration = ({ isEditable, companyInfo, setCompanyInfo }) => {


  return (
    <>
      <div >
        <label style={style.label}>Shift 1</label>
        {isEditable ? (
          <input
            type="number"
            name="shifts"
            value={companyInfo.shiftDurations["shift1"]}
            onChange={b => setCompanyInfo({ ...companyInfo, shiftDurations: { ...companyInfo.shiftDurations, shift1: b.target.value } })}
            style={style.input}
          />
        ) : (
          <p style={style.text}>{companyInfo.shiftDurations["shift1"]}</p>
        )}
      </div>
      <div >
        <label style={style.label}>Shift 2</label>
        {isEditable ? (
          <input
            type="number"
            name="shifts"
            value={companyInfo.shiftDurations["shift2"]}
            onChange={b => setCompanyInfo({ ...companyInfo, shiftDurations: { ...companyInfo.shiftDurations, shift1: b.target.value } })}
            style={style.input}
          />
        ) : (
          <p style={style.text}>{companyInfo.shiftDurations["shift2"]}</p>
        )}
      </div>
      <div >
        <label style={style.label}>Shift 3</label>
        {isEditable ? (
          <input
            type="number"
            name="shifts"
            value={companyInfo.shiftDurations["shift3"]}
            onChange={b => setCompanyInfo({ ...companyInfo, shiftDurations: { ...companyInfo.shiftDurations, shift1: b.target.value } })}
            style={style.input}
          />
        ) : (
          <p style={style.text}>{companyInfo.shiftDurations["shift3"]}</p>
        )}
      </div>
    </>
  )

}


export default function RootLayout({ children }) {

  const [windowDimensions, setWindowDimensions] = useState({
    width: window.innerWidth,
    height: window.innerHeight,
  });
  const [popUpVisibility, setpopUpVisibility] = useState(false);

  const [isEditable, setIsEditable] = useState(false);
  const [companyInfo, setCompanyInfo] = useState({
    tonnage: 35,
    fuel: 200,
    shifts: 2,
    shiftDurations: { shift1: 8, shift2: 5, shift3: 8 }
  });

  // Handle input changes
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setCompanyInfo((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  // Toggle edit mode
  const toggleEditMode = () => {
    setIsEditable((prev) => !prev);
  };

  useEffect(() => {
    const handleResize = () => {
      setWindowDimensions({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    };
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <div style={{ width: "100vw", height: "100vh", position: "fixed", zIndex: -1 }}>
          <Image
            className={styles.backDrop}
            src="/slp8 background.png"
            alt="Next.js logo"
            width={windowDimensions.width}
            height={440}
            priority
          />
        </div>
        <TopNav setpopUpVisibility={setpopUpVisibility}/>
        <SideNav />
        <StoreProvider>
          {children}
          {
            popUpVisibility ?
              <div style={style.popUpBackground} className={styles.popUpBackground}>
                <div style={style.card} className={styles.card}>
                  <div style={{display: "flex", flexDirection: "row", justifyContent: "space-between"}}>
                  <h2 style={style.title}>Mimosa Mine</h2>
                  <div style={{cursor: "pointer" }} onClick={() => setpopUpVisibility(false)}>X</div>
                  </div>
                  
                  <h3> Details </h3>
                  <div style={{ display: "flex", flexDirection: "row", justifyContent: "space-evenly", borderBottom: "1px solid lightgrey", marginBottom: "20px" }}>
                    <div style={style.fieldContainer}>
                      <label style={style.label}>Machine Type</label>
                      <p style={style.text}>SLP 8</p>
                    </div>
                    <div style={style.fieldContainer}>
                      <label style={style.label}>No. Machines</label>
                      <p style={style.text}>5</p>
                    </div>

                  </div>

                  <h3>Targets</h3>
                  <div style={{ display: "flex", flexDirection: "row", justifyContent: "space-evenly", borderBottom: "1px solid lightgrey", marginBottom: "5px" }}>
                    <div style={style.fieldContainer}>
                      <label style={style.label}>Number of Shifts/day</label>
                      {isEditable ? (
                        <input
                          type="number"
                          name="shifts"
                          value={companyInfo.shifts}
                          onChange={handleInputChange}
                          style={style.input}
                        />
                      ) : (
                        <p style={style.text}>{companyInfo.shifts}</p>
                      )}
                    </div>
                    <div style={style.fieldContainer}>
                      <label style={style.label}>Target Tonnage/hr</label>
                      {isEditable ? (
                        <input
                          type="number"
                          name="tonnage"
                          value={companyInfo.tonnage}
                          onChange={handleInputChange}
                          style={style.input}
                        />
                      ) : (
                        <p style={style.text}>{companyInfo.tonnage}</p>
                      )}
                    </div>
                    <div style={style.fieldContainer}>
                      <label style={style.label}>Fuel Consumed/shift</label>
                      {isEditable ? (
                        <input
                          type="number"
                          name="fuel"
                          value={companyInfo.fuel}
                          onChange={handleInputChange}
                          style={style.input}
                        />
                      ) : (
                        <p style={style.text}>{companyInfo.fuel}</p>
                      )}
                    </div>
                  </div>
                  <div style={style.fieldContainer}>
                    <h4>Shift Durations</h4>
                    <div style={{ display: "flex", flexDirection: "row", justifyContent: "space-evenly", marginTop: "5px" }}>
                      <ShiftDuration
                        numberOfShifts={companyInfo.shifts}
                        isEditable={isEditable}
                        shiftDurations={companyInfo.shiftDurations}
                        companyInfo={companyInfo}
                        setCompanyInfo={setCompanyInfo}
                      />
                    </div>
                  </div>
                  <button onClick={toggleEditMode} style={style.button}>
                    {isEditable ? "Save" : "Edit"}
                  </button>
                </div>
              </div>
              : null
          }
        </StoreProvider>
      </body>
    </html>
  );
}



const style = {
  popUpBackground: {
    zIndex: 5,
    position: "fixed",
    backgroundColor: "#000000ac",
    width: "100vw",
    height: "100vh",
    top: 0,
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
  },
  card: {
    padding: "20px",
    border: "1px solid #ddd",
    borderRadius: "8px",
    width: "50%",
    boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
    backgroundColor: "#fff",
  },
  title: {
    fontSize: "24px",
    marginBottom: "20px",
    color: "#333",
  },
  fieldContainer: {
    marginBottom: "15px",
  },
  label: {
    fontSize: "14px",
    color: "#666",
    marginBottom: "5px",
    display: "block",
  },
  input: {
    width: "100%",
    padding: "8px",
    fontSize: "14px",
    border: "1px solid #ddd",
    borderRadius: "4px",
  },
  text: {
    fontSize: "16px",
    color: "#333",
    margin: "0",
  },
  button: {
    padding: "10px 20px",
    fontSize: "16px",
    backgroundColor: "#007bff",
    color: "#fff",
    border: "none",
    borderRadius: "4px",
    cursor: "pointer",
  },
};